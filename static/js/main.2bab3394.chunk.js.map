{"version":3,"sources":["components/layaout/NavBar.js","components/pokemon/Tipo.js","components/pokemon/PokeCard.js","components/pokemon/PokeList.js","components/pokemon/PokeInfo.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","UrlAllsPokemons","listaAllsPokemons","resultadoPokemons","buscarPokemon","bind","assertThisInitialized","verPokemon","Axios","get","listaPokemons","setState","data","results","event","busqueda","target","value","resultados","filter","pokemon","name","includes","slice","console","log","window","location","innerHTML","_this2","react_default","a","createElement","shards_react_es","type","theme","expand","href","src","origin","height","alt","navbar","className","size","seamless","react_fontawesome_index_es","icon","faSearch","id","placeholder","onChange","map","onClick","Component","Tipo","types","PokeCard","foto","tipos","stats","pokeDescripcion","nombre","modalOpen","toggle","url","res","sprites","front_default","reverse","getDescripcion","species","error","_context","t0","speciesUrl","pokeDescripciones","flavor_text_entries","find","descripcion","language","flavor_text","_context2","style","background","colorFondo","pill","top","open","tipo","Tipo_Tipo","stat","base_stat","length","getColorTipo","forEach","index","undefined","PokeList","pokeUrl","pokemons","nextUrl","alertVisible","BotonDisable","alertCerrar","getPokemons","concat","next","alertTexto","dismissible","PokeCard_PokeCard","outline","block","disabled","PokeInfo","n","pathname","lastIndexOf","pokemonNombre","substring","App","NavBar_NavBar","react_router_dom","Fragment","react_router","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bab3394.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavbarBrand,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  FormInput,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from \"shards-react\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default class NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      UrlAllsPokemons: \"https://pokeapi.co/api/v2/pokemon/?limit=10000\",\r\n      listaAllsPokemons: [],\r\n      resultadoPokemons: []\r\n    };\r\n    this.buscarPokemon = this.buscarPokemon.bind(this);\r\n    this.verPokemon = this.verPokemon.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let listaPokemons = await Axios.get(this.state.UrlAllsPokemons);\r\n    this.setState({\r\n      listaAllsPokemons: listaPokemons.data.results\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filtra los nombres por la busqueda y devuelve los primeros 5\r\n   * @param {*} event\r\n   * @memberof NavBar\r\n   */\r\n  buscarPokemon(event) {\r\n    let busqueda = event.target.value;\r\n    if (busqueda !== \"\") {\r\n      let resultados = this.state.listaAllsPokemons.filter(pokemon =>\r\n        pokemon.name.includes(busqueda)\r\n      );\r\n      resultados = resultados.slice(0, 5);\r\n      this.setState({\r\n        resultadoPokemons: resultados\r\n      });\r\n      console.log(resultados);\r\n    } else {\r\n      this.setState({\r\n        resultadoPokemons: []\r\n      });\r\n    }\r\n  }\r\n\r\n  verPokemon(event) {\r\n    window.location = \"/pokemon/\" + event.target.innerHTML;\r\n    this.setState({\r\n      resultadoPokemons: []\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar type=\"dark\" theme=\"danger\" expand=\"md\">\r\n          <NavbarBrand href=\"/\">\r\n            <img src={window.location.origin + \"/Pokédex_logo.png\"} height=\"30\" alt=\"Pokedex\" />\r\n          </NavbarBrand>\r\n          <Nav navbar className=\"ml-auto\">\r\n            <InputGroup size=\"sm\" seamless>\r\n              <InputGroupAddon type=\"prepend\">\r\n                <InputGroupText>\r\n                  <FontAwesomeIcon icon={faSearch} />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <FormInput\r\n                id=\"buscador\"\r\n                className=\"border-0\"\r\n                placeholder=\"Buscar Pokemon\"\r\n                onChange={this.buscarPokemon}\r\n              />\r\n              <ListGroup id=\"resultados-busqueda\">\r\n                {this.state.resultadoPokemons.map(pokemon => {\r\n                  return (\r\n                    <ListGroupItem onClick={this.verPokemon}>\r\n                      {pokemon.name}\r\n                    </ListGroupItem>\r\n                  );\r\n                })}\r\n              </ListGroup>\r\n            </InputGroup>\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Badge } from \"shards-react\";\r\n\r\n/**\r\n * Badge con El tipo de Pokemon\r\n *\r\n * @export\r\n * @class Tipo\r\n * @extends {Component}\r\n */\r\nexport default class Tipo extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-center m-1 text-capitalize\">\r\n        <Badge className={\"tipo-\" + this.props.types.type.name}>\r\n          {this.props.types.type.name}\r\n        </Badge>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardImg,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Progress\r\n} from \"shards-react\";\r\nimport Tipo from \"./Tipo\";\r\n\r\nexport default class PokeCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      foto: \"default.png\",\r\n      id: \"???\",\r\n      tipos: [],\r\n      stats: [],\r\n      pokeDescripcion: props.nombre,\r\n      modalOpen: false\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const res = await Axios.get(this.props.url);\r\n      this.setState({\r\n        foto: res.data.sprites.front_default,\r\n        tipos: res.data.types,\r\n        id: res.data.id,\r\n        stats: res.data.stats.reverse(),\r\n        pokemon: res.data\r\n      });\r\n      this.getDescripcion(res.data.species.url);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene la descripcion en español del pokemon\r\n   * @param String speciesUrl\r\n   * @memberof PokeCard\r\n   */\r\n  async getDescripcion(speciesUrl) {\r\n    try {\r\n      const pokeDescripciones = await Axios.get(speciesUrl);\r\n      const pokeDescripcion = pokeDescripciones.data.flavor_text_entries.find(\r\n        function(descripcion) {\r\n          return descripcion.language.name === \"es\";\r\n        }\r\n      );\r\n      this.setState({\r\n        pokeDescripcion: pokeDescripcion.flavor_text\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error al obtener descripcion del pokemon\");\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cierra o Abre el modal\r\n   * @memberof PokeCard\r\n   */\r\n  toggle() {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { modalOpen } = this.state;\r\n    return (\r\n      <div className=\"col-sm-3 col-md-4 col-lg-3 mt-2\" onClick={this.toggle}>\r\n        <Card\r\n          className=\"poke-card\"\r\n          style={{ background: this.colorFondo(this.state.tipos) }}\r\n        >\r\n          <Badge pill theme=\"secondary\" className=\"poke-pill m-2\">\r\n            {this.state.id}\r\n          </Badge>\r\n          <CardImg top src={this.state.foto} />\r\n          <CardBody>\r\n            <CardTitle className=\"text-center\">{this.props.nombre}</CardTitle>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <Modal\r\n          size=\"lg\"\r\n          open={modalOpen}\r\n          toggle={this.toggle}\r\n          className=\"poke-modal\"\r\n        >\r\n          <div className=\"row badges-tipos\">\r\n            {this.state.tipos.map(tipo => {\r\n              return <Tipo types={tipo} />;\r\n            })}\r\n          </div>\r\n          <ModalHeader>{this.props.nombre}</ModalHeader>\r\n          <ModalBody className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"text-center\">\r\n                <img src={this.state.foto} alt={this.props.nombre} />\r\n              </div>\r\n              <p>{this.state.pokeDescripcion}</p>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              {this.state.stats.map(stat => {\r\n                return (\r\n                  <div className=\"row\">\r\n                    <div className=\"col-3\">{stat.stat.name}</div>\r\n                    <div className=\"col\">\r\n                      <Progress value={stat.base_stat}>\r\n                        {stat.base_stat}\r\n                      </Progress>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Devuelve un color en exadecimal dependiendo del tipo\r\n   *\r\n   * @param {string} tipo - Nombre del tipo de pokemon\r\n   * @returns Color en exadecimal\r\n   * @memberof PokeCard\r\n   */\r\n  getColorTipo(tipo) {\r\n    switch (tipo) {\r\n      case \"normal\":\r\n        return \"#b7aaa7\";\r\n      case \"poison\":\r\n        return \"#b97fc9\";\r\n      case \"grass\":\r\n        return \"#9bcc50\";\r\n      case \"fire\":\r\n        return \"#fd7d24\";\r\n      case \"water\":\r\n        return \"#4592c4\";\r\n      case \"electric\":\r\n        return \"#ffdb71\";\r\n      case \"bug\":\r\n        return \"#aabb2a\";\r\n      case \"flying\":\r\n        return \"#6d9ae2\";\r\n      case \"psychic\":\r\n        return \"#f366b9\";\r\n      case \"ice\":\r\n        return \"#51c4e7\";\r\n      case \"dragon\":\r\n        return \"#ab82ff\";\r\n      case \"dark\":\r\n        return \"#707070\";\r\n      case \"fairy\":\r\n        return \"#fdb9e9\";\r\n      case \"shadow\":\r\n        return \"red\";\r\n      case \"fighting\":\r\n        return \"#d56723\";\r\n      case \"ground\":\r\n        return \"#ab9842\";\r\n      case \"rock\":\r\n        return \"#a38c21\";\r\n      case \"steel\":\r\n        return \"#9eb7b8\";\r\n      case \"ghost\":\r\n        return \"#7b62a3\";\r\n      default:\r\n        return \"white\";\r\n    }\r\n  }\r\n\r\n  colorFondo(tipos) {\r\n    if (tipos.length > 0) {\r\n      if (tipos.length === 1) {\r\n        return this.getColorTipo(tipos[0].type.name);\r\n      }\r\n      let colorFondo = \"linear-gradient(360deg, \";\r\n      tipos.forEach((tipo, index) => {\r\n        colorFondo += this.getColorTipo(tipo.type.name);\r\n        if (tipos[index + 1] !== undefined) {\r\n          colorFondo += \", \";\r\n        }\r\n      });\r\n      colorFondo += \")\";\r\n\r\n      return colorFondo;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport PokeCard from \"./PokeCard\";\r\nimport { Row, Alert, Button } from \"shards-react\";\r\n\r\nimport \"../../tipos.css\";\r\n\r\nexport default class PokeList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokeUrl: \"https://pokeapi.co/api/v2/pokemon/?limit=25\",\r\n      pokemons: [],\r\n      nextUrl: null,\r\n      modalOpen: false,\r\n      alertVisible: false,\r\n      BotonDisable: false\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.alertCerrar = this.alertCerrar.bind(this);\r\n    this.getPokemons = this.getPokemons.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getPokemons();\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen\r\n    });\r\n  }\r\n\r\n  alertCerrar() {\r\n    this.setState({ alertVisible: false });\r\n  }\r\n\r\n  async getPokemons() {\r\n    try {\r\n      this.setState({\r\n        BotonDisable: true\r\n      });\r\n      let url = this.state.nextUrl;\r\n      if (this.state.nextUrl === null) {\r\n        url = this.state.pokeUrl;\r\n      }\r\n      const res = await Axios.get(url);\r\n      this.setState({\r\n        pokemons: this.state.pokemons.concat(res.data.results),\r\n        nextUrl: res.data.next,\r\n        BotonDisable: false\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        alertTexto: \"Error al obtener lista de Pokemons\",\r\n        alertVisible: true,\r\n        BotonDisable: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Alert\r\n          theme=\"warning\"\r\n          open={this.state.alertVisible}\r\n          dismissible={this.alertCerrar}\r\n        >\r\n          {this.state.alertTexto}\r\n        </Alert>\r\n        <Row className=\"m-2\">\r\n          {this.state.pokemons.map(pokemon => (\r\n            <PokeCard\r\n              nombre={pokemon.name}\r\n              url={pokemon.url}\r\n              onClick={this.toggle.bind(this)}\r\n            />\r\n          ))}\r\n        </Row>\r\n        <div className=\"m-1\">\r\n          <Button\r\n            theme=\"danger\"\r\n            outline\r\n            block\r\n            onClick={this.getPokemons}\r\n            disabled={this.state.BotonDisable}\r\n          >\r\n            Mas\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Progress } from \"shards-react\";\r\nimport Tipo from \"./Tipo\";\r\nimport \"../../tipos.css\";\r\n\r\nexport default class PokeInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let n = props.location.pathname.lastIndexOf(\"/\");\r\n    let pokemonNombre = props.location.pathname.substring(n + 1);\r\n\r\n    this.state = {\r\n      nombre: pokemonNombre,\r\n      url: \"https://pokeapi.co/api/v2/pokemon/\" + pokemonNombre,\r\n      foto: \"/default.png\",\r\n      id: \"???\",\r\n      tipos: [],\r\n      stats: [],\r\n      pokeDescripcion: pokemonNombre,\r\n      modalOpen: true\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const res = await Axios.get(this.state.url);\r\n      this.setState({\r\n        foto: res.data.sprites.front_default,\r\n        tipos: res.data.types,\r\n        id: res.data.id,\r\n        stats: res.data.stats.reverse(),\r\n        pokemon: res.data\r\n      });\r\n      try {\r\n        const pokeDescripciones = await Axios.get(res.data.species.url);\r\n        const pokeDescripcion = pokeDescripciones.data.flavor_text_entries.find(\r\n          function(descripcion) {\r\n            return descripcion.language.name === \"es\";\r\n          }\r\n        );\r\n        this.setState({\r\n          pokeDescripcion: pokeDescripcion.flavor_text\r\n        });\r\n      } catch (error) {\r\n        //    console.log(error);\r\n      }\r\n    } catch (error) {\r\n      //    console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { modalOpen } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"container mt-2\">\r\n          <h2 className='text-center text-capitalize'>{this.state.nombre}</h2>\r\n          <div className=\"row\">\r\n            <div className=\"col-2 text-center\">\r\n              <img src={this.state.foto} alt={this.state.nombre} />\r\n            </div>\r\n            <div className=\"col mt-3\">\r\n              <p>{this.state.pokeDescripcion}</p>\r\n            \r\n            </div>\r\n            <div className='col-2 row'>\r\n              {this.state.tipos.map(tipo => {\r\n                return <Tipo types={tipo} />;\r\n              })} \r\n            </div>\r\n          </div>\r\n          {/* <div className=\"row\">\r\n            {this.state.tipos.map(tipo => {\r\n              return <Tipo types={tipo} />;\r\n            })}\r\n          </div> */}\r\n          {this.state.stats.map(stat => {\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"col-3\">{stat.stat.name}</div>\r\n                <div className=\"col\">\r\n                  <Progress value={stat.base_stat}>{stat.base_stat}</Progress>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nimport NavBar from \"./components/layaout/NavBar\";\r\nimport PokeList from \"./components/pokemon/PokeList\";\r\n\r\nimport PokeInfo from './components/pokemon/PokeInfo';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\";\r\nimport \"./App.css\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <NavBar />\r\n      </header>\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <Switch>\r\n            <Route path='/pokemon' component={PokeInfo} ></Route>\r\n            <Route path='/' component={PokeList} ></Route>\r\n          </Switch>\r\n        </React.Fragment> \r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}